/* 
html5doctor.com Reset Stylesheet
v1.6.1
Last Updated: 2010-09-17
Author: Richard Clark - http://richclarkdesign.com 
Twitter: @rich_clark
*/
html {
  box-sizing: border-box;
  overflow-y: scroll;
  /* All browsers without overlaying scrollbars */
  -webkit-text-size-adjust: 100%;
  /* iOS 8+ */
}

*,
::before,
::after {
  box-sizing: inherit;
}

::before,
::after {
  text-decoration: inherit;
  /* Inherit text-decoration and vertical align to ::before and ::after pseudo elements */
  vertical-align: inherit;
}

html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

body {
  line-height: 1;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

nav ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/* change colours to suit your needs */
ins {
  background-color: #ff9;
  color: #000;
  text-decoration: none;
}

/* change colours to suit your needs */
mark {
  background-color: #ff9;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

del {
  text-decoration: line-through;
}

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* change border colour to suit your needs */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

input, select {
  vertical-align: middle;
}

input[type=button], input[type=submit] {
  -webkit-appearance: none;
}

body {
  font-family: "Helvetica Neue", Arial, "Hiragino Kaku Gothic ProN", "Hiragino Sans", "BIZ UDPGothic", Meiryo, sans-serif;
}

input,
select,
button,
textarea {
  box-sizing: border-box;
}

input[type=text],
input[type=password],
input[type=tel],
input[type=number],
input[type=submit],
input[type=button],
input[type=reset],
textarea,
button,
select {
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  border-radius: 0;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  resize: none;
}

input[type=submit],
input[type=button],
input[type=reset],
button,
label[for] {
  cursor: pointer;
}

::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

.error_text {
  color: #f00;
  font-size: 0.6875rem;
  margin-top: 5px;
}

.tweet {
  max-width: 800px;
  margin: 20px auto;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 48px 1fr;
  grid-template-columns: 48px 1fr;
  background-color: #fff;
  padding: 20px;
}
.tweet .tweet_icon {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  overflow: hidden;
}
.tweet .tweet_icon img {
  width: 48px;
  height: 48px;
  -o-object-fit: cover;
     object-fit: cover;
}
.tweet .tweet_main {
  padding-left: 20px;
}
.tweet textarea {
  width: 100%;
  background-color: #fff;
  padding: 10px;
  border: solid 1px #ccc;
}
.tweet .tweet_footer {
  display: flex;
  margin-top: 20px;
}
.tweet .upload .img_tweet {
  width: 20px;
  height: 20px;
  fill: rgb(29, 155, 240);
}
.tweet .upload input[type=file] {
  visibility: hidden;
}
.tweet input[type=submit] {
  margin-left: auto;
  width: 160px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(29, 155, 240);
  color: #fff;
  border-radius: 30px;
}

.timeline {
  max-width: 800px;
  margin: 20px auto 0;
  padding-bottom: 20px;
}

.timeline_item {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 48px 1fr;
  grid-template-columns: 48px 1fr;
  padding: 20px;
  background-color: #fff;
}
.timeline_item + .timeline_item {
  margin-top: 20px;
}
.timeline_item .timeline_item_icon {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  overflow: hidden;
}
.timeline_item .timeline_item_icon img {
  width: 48px;
  height: 48px;
  -o-object-fit: cover;
     object-fit: cover;
}
.timeline_item .timeline_item_main {
  padding: 0 20px;
}
.timeline_item .timeline_item_main .timeline_item_main_head {
  display: flex;
  gap: 20px;
}
.timeline_item .timeline_item_main .timeline_item_main_head h3 {
  font-weight: bold;
}
.timeline_item .timeline_item_main .timeline_item_main_head a {
  text-decoration: none;
  color: #000;
}
.timeline_item .timeline_item_main_body {
  margin-top: 20px;
}
.timeline_item .timeline_item_main_footer {
  margin-top: 20px;
}
.timeline_item .timeline_item_main_footer ul {
  display: flex;
  gap: 20px;
}
.timeline_item .timeline_item_main_footer ul li a:hover {
  opacity: 0.5;
}
.timeline_item .timeline_item_main_footer .reply_icon {
  width: 18px;
  height: 18px;
}
.timeline_item .timeline_item_main_footer .retweet_icon {
  width: 18px;
  height: 18px;
}

.page {
  max-width: 800px;
  margin: 20px auto;
}
.page .pageitem {
  background-color: #fff;
  padding: 20px;
}
.page .pageitem + .pageitem {
  margin-top: 30px;
}
.page .pageitem h3 {
  font-weight: bold;
  margin-bottom: 20px;
}
.page .pageitem label + label {
  margin-left: 30px;
}
.page .pageitem input[type=text] {
  width: 100%;
  padding: 0.5em 1em;
  font-size: 1rem;
  border: solid 1px #ccc;
}
.page .pageitem .input_wrap {
  display: flex;
  align-items: center;
  width: 100%;
  font-size: 1rem;
  border: solid 1px #ccc;
}
.page .pageitem .input_wrap::before {
  content: "@";
  padding: 0 0 0 1em;
}
.page .pageitem .input_wrap input[type=text] {
  border: none;
}
.page .pageitem .input_wrap input[type=text]:focus {
  outline: none;
}
.page .pageitem input[type=radio] {
  margin-right: 5px;
}
.page .pageitem button[type=submit] {
  margin-top: 20px;
  width: 100px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(29, 155, 240);
  color: #fff;
}

.user {
  max-width: 800px;
  margin: 0 auto;
  background-color: #fff;
}
.user .user_head {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 300px;
  background-color: #ccc;
}
.user .user_head img {
  width: 200px;
  height: 200px;
  -o-object-fit: cover;
     object-fit: cover;
  border-radius: 50%;
  border: solid 3px #fff;
}
.user .user_profile_head {
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 10px 20px;
}
.user .user_profile_head h3 {
  font-size: 1.25rem;
  font-weight: bold;
}
.user .user_profile_head p {
  font-size: 1.125rem;
}
.user .btn_follow {
  margin-left: auto;
  width: 100px;
}
.user .btn_follow a {
  margin-top: 20px;
  width: 100px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(29, 155, 240);
  color: #fff;
}
.user .user_profile_foot {
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 0 20px 20px;
}
.user .user_profile_foot ul {
  display: flex;
  gap: 20px;
}
.user_profile_wrap {
  display: flex;
  align-items: center;
}
.user_profile_wrap .user_profile_img {
  width: 60px;
}
.user_profile_wrap .user_profile_img img {
  width: 60px;
  height: 60px;
  -o-object-fit: cover;
     object-fit: cover;
  border-radius: 50%;
}
.user_profile_wrap .user_profile_upload {
  padding-left: 20px;
}
.user_profile_wrap .user_profile_upload label {
  border: solid 1px #ccc;
  padding: 10px;
}
.user_profile_wrap .user_profile_upload label:hover {
  background-color: #ccc;
  color: #fff;
}
.user_profile_wrap input[type=file] {
  visibility: hidden;
}

.user_head img {
  -webkit-animation: 10s linear infinite rotation;
          animation: 10s linear infinite rotation;
}

@-webkit-keyframes rotation {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rotation {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/